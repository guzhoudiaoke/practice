/*
 * poj 2362
 * guzhoudiaoke@126.com
 * 2011-11-08
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int n, len[20], sum, length;
bool visited[20], find;

int cmp_len(const void *a, const void *b)
{
	return (*(int *)b) - (*(int *)a);
}

int dfs(int cur_len, int cur_num)
{
	if (find) return true;
	if (cur_num == 4) find = true;
	if (cur_len == length) return dfs(0, cur_num+1);

	for (int i = 0; i < n; i++)
		if (visited[i] == false)
		{
			if (cur_len + len[i] > length) continue;
			if (i > 0 && len[i] == len[i-1] && visited[i-1] == false) continue;
			visited[i] = true;
			dfs(cur_len+len[i], cur_num);
			visited[i] = false;
			if (cur_len == 0) return false;
		}

	return false;
}

int solve()
{
	if (sum % 4 != 0)
		return 0;
	
	length = sum / 4;
	find = false;
	memset(visited, false, sizeof(visited));

	return dfs(0, 0);
}

int main()
{
	int t;
	
	scanf("%d", &t);
	while (t--)
	{
		sum = 0;
		scanf("%d", &n);
		printf("%d\n", n);

		for (int i = 0; i < n; i++)
		{
			scanf("%d", &len[i]);
			printf("%d ", len[i]);

			sum += len[i];
		}

		qsort(len, n, sizeof(int), cmp_len);
		solve();

		if (find)
			printf("yes\n");
		else
			printf("no\n");
	}
	return 0;
}

